2021-09-22 10:31:27.858362: FINE: services.LocationService: Initializing...
2021-09-22 10:31:27.868342: FINE: services.LocationService: Register port mapping
2021-09-22 10:31:29.666420: INFO: Common.Auth: Found User(displayName: , email: gump891202@gmail.com, emailVerified: false, isAnonymous: false, metadata: UserMetadata(creationTime: 2021-07-12 08:01:08.621, lastSignInTime: 2021-09-22 08:48:29.613), phoneNumber: , photoURL: null, providerData, [UserInfo(displayName: , email: gump891202@gmail.com, phoneNumber: , photoURL: null, providerId: password, uid: gump891202@gmail.com)], refreshToken: , tenantId: null, uid: cV4zqBkzc9g1jA5LAoa3py1FhSu1)
2021-09-22 10:31:29.821199: INFO: Common.Auth: Arrived user from Firebase User(displayName: , email: gump891202@gmail.com, emailVerified: false, isAnonymous: false, metadata: UserMetadata(creationTime: 2021-07-12 08:01:08.621, lastSignInTime: 2021-09-22 08:48:29.613), phoneNumber: , photoURL: null, providerData, [UserInfo(displayName: , email: gump891202@gmail.com, phoneNumber: , photoURL: null, providerId: password, uid: gump891202@gmail.com)], refreshToken: , tenantId: null, uid: cV4zqBkzc9g1jA5LAoa3py1FhSu1)
2021-09-22 10:31:29.833915: INFO: services.LocationService: Initialized
2021-09-22 10:31:30.485315: INFO: gql.AppGqlClient: Enqueue 0 mutations from persistence
2021-09-22 10:31:30.486253: INFO: gql.AppGqlClient: Enqueue done
2021-09-22 10:31:30.531305: FINE: gql.links.LogRequestsLink: Request sent: GGetCurrentUserProfileReq {
2021-09-22 10:31:30.531305: FINE: gql.links.LogRequestsLink:   vars=GGetCurrentUserProfileVars {
2021-09-22 10:31:30.531305: FINE: gql.links.LogRequestsLink:     id=cV4zqBkzc9g1jA5LAoa3py1FhSu1,
2021-09-22 10:31:30.531305: FINE: gql.links.LogRequestsLink:   },
2021-09-22 10:31:30.531305: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription GetCurrentUserProfile($id: String!) {\n  profile_by_pk(id: $id) {\n    __typename\n    ...ProfileExt\n    organisations_created_by_me {\n      __typename\n      ...Organisation\n    }\n  }\n}\n\nfragment Profile on profile {\n  __typename\n  id\n  name\n  birth_year\n  gender\n}\n\nfragment ProfileExt on profile {\n  __typename\n  ...Profile\n  email\n  phone\n  vat_id\n  city\n  address\n  company_name\n  postal_code\n}\n\nfragment Organisation on organisation {\n  __typename\n  id\n  name\n  url\n}\n\nfragment OrganisationExt on organisation {\n  __typename\n  ...Organisation\n  email\n  payment_url\n  created_at\n}"), operationName: GetCurrentUserProfile),
2021-09-22 10:31:30.531305: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-22 10:31:30.531305: FINE: gql.links.LogRequestsLink: }
2021-09-22 10:31:31.013277: FINE: gql.links.LogRequestsLink: Request sent: GAthleteGetTrailsForListingReq {
2021-09-22 10:31:31.013277: FINE: gql.links.LogRequestsLink:   vars=GAthleteGetTrailsForListingVars {
2021-09-22 10:31:31.013277: FINE: gql.links.LogRequestsLink:   },
2021-09-22 10:31:31.013277: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteGetTrailsForListing {\n  trail(order_by: {popularity: desc}) {\n    __typename\n    id\n    ...TrailCardFields\n  }\n}\n\nsubscription GetCompletedTrails {\n  activity(where: {_and: [{start_at: {_is_null: false}}, {_or: [{end_at: {_is_null: false}}, {giveup_at: {_is_null: false}}]}]}) {\n    __typename\n    giveup_at\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n        id\n      }\n    }\n  }\n}\n\nsubscription GetCompletedTrail($activityId: uuid!) {\n  activity_by_pk(id: $activityId) {\n    __typename\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n      }\n    }\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment ActivityTimes on activity {\n  __typename\n  id\n  start_at\n  end_at\n  planned_at\n}"), operationName: AthleteGetTrailsForListing),
2021-09-22 10:31:31.013277: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-22 10:31:31.013277: FINE: gql.links.LogRequestsLink: }
2021-09-22 10:31:31.065716: FINE: gql.links.RetryUntilResponseLink: (GetCurrentUserProfile#1201049448): Requesting from source
2021-09-22 10:31:31.133773: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for GetCurrentUserProfile
2021-09-22 10:31:31.162328: FINE: gql.links.RetryUntilResponseLink: (AthleteGetTrailsForListing#1544153964): Requesting from source
2021-09-22 10:31:31.255573: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailsForListing
2021-09-22 10:31:32.702454: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for GetCurrentUserProfile
2021-09-22 10:31:32.984257: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGetTrailsForListing
