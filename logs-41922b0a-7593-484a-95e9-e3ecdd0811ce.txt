2021-09-23 05:53:03.130730: FINE: services.LocationService: Initializing...
2021-09-23 05:53:03.130855: FINE: services.LocationService: Register port mapping
2021-09-23 05:53:03.202670: INFO: Common.Auth: Found User(displayName: null, email: albert@papps.net, emailVerified: false, isAnonymous: false, metadata: UserMetadata(creationTime: 2021-09-08 13:13:28.416, lastSignInTime: 2021-09-08 13:13:28.416), phoneNumber: null, photoURL: null, providerData, [UserInfo(displayName: null, email: albert@papps.net, phoneNumber: null, photoURL: null, providerId: password, uid: albert@papps.net)], refreshToken: , tenantId: null, uid: 9ViQ8qkLSNeTSfk6WN5S4SYoFMv1)
2021-09-23 05:53:03.203837: INFO: Common.Auth: Arrived user from Firebase User(displayName: null, email: albert@papps.net, emailVerified: false, isAnonymous: false, metadata: UserMetadata(creationTime: 2021-09-08 13:13:28.416, lastSignInTime: 2021-09-08 13:13:28.416), phoneNumber: null, photoURL: null, providerData, [UserInfo(displayName: null, email: albert@papps.net, phoneNumber: null, photoURL: null, providerId: password, uid: albert@papps.net)], refreshToken: , tenantId: null, uid: 9ViQ8qkLSNeTSfk6WN5S4SYoFMv1)
2021-09-23 05:53:03.204124: INFO: services.LocationService: Initialized
2021-09-23 05:53:03.299625: INFO: gql.AppGqlClient: Enqueue 0 mutations from persistence
2021-09-23 05:53:03.299697: INFO: gql.AppGqlClient: Enqueue done
2021-09-23 05:53:03.300108: FINE: gql.links.LogRequestsLink: Request sent: GGetCurrentUserProfileReq {
2021-09-23 05:53:03.300108: FINE: gql.links.LogRequestsLink:   vars=GGetCurrentUserProfileVars {
2021-09-23 05:53:03.300108: FINE: gql.links.LogRequestsLink:     id=9ViQ8qkLSNeTSfk6WN5S4SYoFMv1,
2021-09-23 05:53:03.300108: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:03.300108: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription GetCurrentUserProfile($id: String!) {\n  profile_by_pk(id: $id) {\n    __typename\n    ...ProfileExt\n    organisations_created_by_me {\n      __typename\n      ...Organisation\n    }\n  }\n}\n\nfragment Profile on profile {\n  __typename\n  id\n  name\n  birth_year\n  gender\n}\n\nfragment ProfileExt on profile {\n  __typename\n  ...Profile\n  email\n  phone\n  vat_id\n  city\n  address\n  company_name\n  postal_code\n}\n\nfragment Organisation on organisation {\n  __typename\n  id\n  name\n  url\n}\n\nfragment OrganisationExt on organisation {\n  __typename\n  ...Organisation\n  email\n  payment_url\n  created_at\n}"), operationName: GetCurrentUserProfile),
2021-09-23 05:53:03.300108: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:03.300108: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:03.308289: FINE: gql.links.LogRequestsLink: Request sent: GAthleteGetTrailsForListingReq {
2021-09-23 05:53:03.308289: FINE: gql.links.LogRequestsLink:   vars=GAthleteGetTrailsForListingVars {
2021-09-23 05:53:03.308289: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:03.308289: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteGetTrailsForListing {\n  trail(order_by: {popularity: desc}) {\n    __typename\n    id\n    ...TrailCardFields\n  }\n}\n\nsubscription GetCompletedTrails {\n  activity(where: {_and: [{start_at: {_is_null: false}}, {_or: [{end_at: {_is_null: false}}, {giveup_at: {_is_null: false}}]}]}) {\n    __typename\n    giveup_at\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n        id\n      }\n    }\n  }\n}\n\nsubscription GetCompletedTrail($activityId: uuid!) {\n  activity_by_pk(id: $activityId) {\n    __typename\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n      }\n    }\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment ActivityTimes on activity {\n  __typename\n  id\n  start_at\n  end_at\n  planned_at\n}"), operationName: AthleteGetTrailsForListing),
2021-09-23 05:53:03.308289: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:03.308289: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:03.310121: FINE: gql.links.RetryUntilResponseLink: (GetCurrentUserProfile#1408330779): Requesting from source
2021-09-23 05:53:03.310828: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for GetCurrentUserProfile
2021-09-23 05:53:03.314567: FINE: gql.links.RetryUntilResponseLink: (AthleteGetTrailsForListing#1862291400): Requesting from source
2021-09-23 05:53:03.317942: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailsForListing
2021-09-23 05:53:03.573934: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGetTrailsForListing
2021-09-23 05:53:03.577933: FINE: gql.links.RetryUntilResponseLink: (AthleteGetTrailsForListing#1862291400): Got Done event
2021-09-23 05:53:03.763008: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for GetCurrentUserProfile
2021-09-23 05:53:15.896285: FINE: gql.links.LogRequestsLink: Request sent: GAthleteGetTrailsForListingReq {
2021-09-23 05:53:15.896285: FINE: gql.links.LogRequestsLink:   vars=GAthleteGetTrailsForListingVars {
2021-09-23 05:53:15.896285: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:15.896285: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteGetTrailsForListing {\n  trail(order_by: {popularity: desc}) {\n    __typename\n    id\n    ...TrailCardFields\n  }\n}\n\nsubscription GetCompletedTrails {\n  activity(where: {_and: [{start_at: {_is_null: false}}, {_or: [{end_at: {_is_null: false}}, {giveup_at: {_is_null: false}}]}]}) {\n    __typename\n    giveup_at\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n        id\n      }\n    }\n  }\n}\n\nsubscription GetCompletedTrail($activityId: uuid!) {\n  activity_by_pk(id: $activityId) {\n    __typename\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n      }\n    }\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment ActivityTimes on activity {\n  __typename\n  id\n  start_at\n  end_at\n  planned_at\n}"), operationName: AthleteGetTrailsForListing),
2021-09-23 05:53:15.896285: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:15.896285: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:15.900620: FINE: gql.links.RetryUntilResponseLink: (AthleteGetTrailsForListing#1862291400): Requesting from source
2021-09-23 05:53:15.910211: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailsForListing
2021-09-23 05:53:16.382604: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGetTrailsForListing
2021-09-23 05:53:17.850331: FINE: gql.links.LogRequestsLink: Request sent: GAthleteGetEntriesReq {
2021-09-23 05:53:17.850331: FINE: gql.links.LogRequestsLink:   vars=GAthleteGetEntriesVars {
2021-09-23 05:53:17.850331: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:17.850331: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteGetEntries {\n  activity(order_by: {planned_at: asc, trail_config: {trail: {name: asc}}}, where: {_and: {end_at: {_is_null: true}, giveup_at: {_is_null: true}, deleted_at: {_is_null: true}}}) {\n    __typename\n    ...ActivityCardFields\n    ...OFFLTrackedActivity\n  }\n}\n\nfragment OFFLTrackedActivity on activity {\n  __typename\n  ...ActivityStateFields\n  id\n  path\n  trail_config {\n    __typename\n    id\n    trail {\n      __typename\n      id\n      circular_checkpoints\n      trail_path\n      summary_path\n      checkpoints(order_by: {index: asc}) {\n        __typename\n        id\n        index\n        location\n        range_meters\n      }\n    }\n  }\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment OFFLTrackedActivityWrite on activity {\n  __typename\n  id\n  end_at\n  path\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment ActivityStateFields on activity {\n  __typename\n  deleted_at\n  planned_at\n  approved_at\n  start_at\n  end_at\n  giveup_at\n  trail_config {\n    __typename\n    reward_type {\n      __typename\n      auto_approve\n    }\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}"), operationName: AthleteGetEntries),
2021-09-23 05:53:17.850331: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:17.850331: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:17.854541: FINE: gql.links.RetryUntilResponseLink: (AthleteGetEntries#1502575405): Requesting from source
2021-09-23 05:53:17.977187: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGetEntries
2021-09-23 05:53:19.979890: FINE: gql.links.LogRequestsLink: Request sent: GAthleteWatchActivityDetailsReq {
2021-09-23 05:53:19.979890: FINE: gql.links.LogRequestsLink:   vars=GAthleteWatchActivityDetailsVars {
2021-09-23 05:53:19.979890: FINE: gql.links.LogRequestsLink:     activityId=e9864ecc-8144-4b17-a531-79c6a9999539,
2021-09-23 05:53:19.979890: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:19.979890: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteWatchActivityDetails($activityId: uuid!) {\n  activity_by_pk(id: $activityId) {\n    __typename\n    ...ActivityCardFields\n    ...OFFLTrackedActivity\n  }\n}\n\nfragment OFFLTrackedActivity on activity {\n  __typename\n  ...ActivityStateFields\n  id\n  path\n  trail_config {\n    __typename\n    id\n    trail {\n      __typename\n      id\n      circular_checkpoints\n      trail_path\n      summary_path\n      checkpoints(order_by: {index: asc}) {\n        __typename\n        id\n        index\n        location\n        range_meters\n      }\n    }\n  }\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment OFFLTrackedActivityWrite on activity {\n  __typename\n  id\n  end_at\n  path\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment ActivityStateFields on activity {\n  __typename\n  deleted_at\n  planned_at\n  approved_at\n  start_at\n  end_at\n  giveup_at\n  trail_config {\n    __typename\n    reward_type {\n      __typename\n      auto_approve\n    }\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment ActivityPath on activity_path {\n  __typename\n  id\n  checkpoint_id\n  reached_at\n  location\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment Checkpoint on checkpoint {\n  __typename\n  id\n  name\n  index\n  location\n}\n\nfragment CheckpointExt on checkpoint {\n  __typename\n  ...Checkpoint\n  description\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}"), operationName: AthleteWatchActivityDetails),
2021-09-23 05:53:19.979890: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:19.979890: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:19.988092: FINE: gql.links.RetryUntilResponseLink: (AthleteWatchActivityDetails#261616012): Requesting from source
2021-09-23 05:53:19.990293: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteWatchActivityDetails
2021-09-23 05:53:20.090217: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteWatchActivityDetails
2021-09-23 05:53:22.549435: FINE: gql.links.LogRequestsLink: Request sent: GAthleteGiveUpActivityReq {
2021-09-23 05:53:22.549435: FINE: gql.links.LogRequestsLink:   vars=GAthleteGiveUpActivityVars {
2021-09-23 05:53:22.549435: FINE: gql.links.LogRequestsLink:     id=e9864ecc-8144-4b17-a531-79c6a9999539,
2021-09-23 05:53:22.549435: FINE: gql.links.LogRequestsLink:     giveupAt=2021-09-23 05:53:22.547865,
2021-09-23 05:53:22.549435: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:22.549435: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("mutation AthleteCreateActivity($id: uuid!, $configId: uuid!, $plannedAt: timestamptz!) {\n  __typename\n  insert_activity_one(object: {id: $id, trail_config_id: $configId, planned_at: $plannedAt}) {\n    __typename\n    id\n  }\n}\n\nmutation AthleteStartActivity($id: uuid!, $startAt: timestamptz!) {\n  __typename\n  update_activity_by_pk(pk_columns: {id: $id}, _set: {start_at: $startAt}) {\n    __typename\n    id\n    start_at\n  }\n}\n\nmutation AthleteGiveUpActivity($id: uuid!, $giveupAt: timestamptz!) {\n  __typename\n  update_activity_by_pk(pk_columns: {id: $id}, _set: {giveup_at: $giveupAt}) {\n    __typename\n    id\n    giveup_at\n  }\n}"), operationName: AthleteGiveUpActivity),
2021-09-23 05:53:22.549435: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:22.549435: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:22.554282: FINE: gql.links.RetryUntilResponseLink: (AthleteGiveUpActivity#1482537779): Requesting from source
2021-09-23 05:53:22.627723: FINE: gql.links.RetryUntilResponseLink: (AthleteGiveUpActivity#1482537779): Got Done event
2021-09-23 05:53:22.629118: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGiveUpActivity
2021-09-23 05:53:22.640103: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetEntries
2021-09-23 05:53:22.640892: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteWatchActivityDetails
2021-09-23 05:53:22.647365: INFO: gql.links.MultiMutationLink: (1482537779): is done
2021-09-23 05:53:23.123916: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGetEntries
2021-09-23 05:53:23.133554: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteWatchActivityDetails
2021-09-23 05:53:24.949024: FINE: gql.links.LogRequestsLink: Request sent: GAthleteGetEntriesReq {
2021-09-23 05:53:24.949024: FINE: gql.links.LogRequestsLink:   vars=GAthleteGetEntriesVars {
2021-09-23 05:53:24.949024: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:24.949024: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteGetEntries {\n  activity(order_by: {planned_at: asc, trail_config: {trail: {name: asc}}}, where: {_and: {end_at: {_is_null: true}, giveup_at: {_is_null: true}, deleted_at: {_is_null: true}}}) {\n    __typename\n    ...ActivityCardFields\n    ...OFFLTrackedActivity\n  }\n}\n\nfragment OFFLTrackedActivity on activity {\n  __typename\n  ...ActivityStateFields\n  id\n  path\n  trail_config {\n    __typename\n    id\n    trail {\n      __typename\n      id\n      circular_checkpoints\n      trail_path\n      summary_path\n      checkpoints(order_by: {index: asc}) {\n        __typename\n        id\n        index\n        location\n        range_meters\n      }\n    }\n  }\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment OFFLTrackedActivityWrite on activity {\n  __typename\n  id\n  end_at\n  path\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment ActivityStateFields on activity {\n  __typename\n  deleted_at\n  planned_at\n  approved_at\n  start_at\n  end_at\n  giveup_at\n  trail_config {\n    __typename\n    reward_type {\n      __typename\n      auto_approve\n    }\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}"), operationName: AthleteGetEntries),
2021-09-23 05:53:24.949024: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:24.949024: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:24.952705: FINE: gql.links.RetryUntilResponseLink: (AthleteGetEntries#1502575405): Requesting from source
2021-09-23 05:53:24.955287: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetEntries
2021-09-23 05:53:25.072802: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGetEntries
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink: Request sent: GUpsertProfileReq {
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:   vars=GUpsertProfileVars {
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:     object=Gprofile_insert_input {
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:       address=Dessewffy u. 16,
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:       city=Budapest,
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:       company_name=OnBased Group,
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:       email=albert@papps.net,
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:       name=Papp Albert,
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:       phone=0036305591118,
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:       postal_code=1066,
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:       vat_id=13355166242,
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:     },
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("mutation UpsertProfile($object: profile_insert_input!) {\n  __typename\n  insert_profile_one(object: $object, on_conflict: {constraint: profile_pkey, update_columns: [name, phone, birth_year, email, vat_id, city, company_name, postal_code, address]}) {\n    __typename\n    ...ProfileExt\n    organisations_created_by_me {\n      __typename\n      ...Organisation\n    }\n  }\n}\n\nfragment Profile on profile {\n  __typename\n  id\n  name\n  birth_year\n  gender\n}\n\nfragment ProfileExt on profile {\n  __typename\n  ...Profile\n  email\n  phone\n  vat_id\n  city\n  address\n  company_name\n  postal_code\n}\n\nfragment Organisation on organisation {\n  __typename\n  id\n  name\n  url\n}\n\nfragment OrganisationExt on organisation {\n  __typename\n  ...Organisation\n  email\n  payment_url\n  created_at\n}"), operationName: UpsertProfile),
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:27.179361: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:27.185057: FINE: gql.links.RetryUntilResponseLink: (UpsertProfile#477872264): Requesting from source
2021-09-23 05:53:27.256272: FINE: gql.links.RetryUntilResponseLink: (UpsertProfile#477872264): Got Done event
2021-09-23 05:53:27.257781: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for UpsertProfile
2021-09-23 05:53:27.264063: INFO: gql.links.MultiMutationLink: (477872264): is done
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink: Request sent: GUpsertProfileReq {
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:   vars=GUpsertProfileVars {
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:     object=Gprofile_insert_input {
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:       address=Dessewffy u. 16,
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:       city=Budapest,
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:       company_name=OnBased Group,
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:       email=albert@papps.net,
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:       name=Papp Albert,
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:       phone=0036305591118,
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:       postal_code=1066,
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:       vat_id=13355166242,
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:     },
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("mutation UpsertProfile($object: profile_insert_input!) {\n  __typename\n  insert_profile_one(object: $object, on_conflict: {constraint: profile_pkey, update_columns: [name, phone, birth_year, email, vat_id, city, company_name, postal_code, address]}) {\n    __typename\n    ...ProfileExt\n    organisations_created_by_me {\n      __typename\n      ...Organisation\n    }\n  }\n}\n\nfragment Profile on profile {\n  __typename\n  id\n  name\n  birth_year\n  gender\n}\n\nfragment ProfileExt on profile {\n  __typename\n  ...Profile\n  email\n  phone\n  vat_id\n  city\n  address\n  company_name\n  postal_code\n}\n\nfragment Organisation on organisation {\n  __typename\n  id\n  name\n  url\n}\n\nfragment OrganisationExt on organisation {\n  __typename\n  ...Organisation\n  email\n  payment_url\n  created_at\n}"), operationName: UpsertProfile),
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:28.529006: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:28.532032: FINE: gql.links.RetryUntilResponseLink: (UpsertProfile#477872264): Requesting from source
2021-09-23 05:53:28.598550: FINE: gql.links.RetryUntilResponseLink: (UpsertProfile#477872264): Got Done event
2021-09-23 05:53:28.599784: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for UpsertProfile
2021-09-23 05:53:28.605065: INFO: gql.links.MultiMutationLink: (477872264): is done
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink: Request sent: GUpsertProfileReq {
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:   vars=GUpsertProfileVars {
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:     object=Gprofile_insert_input {
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:       address=Dessewffy u. 16,
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:       city=Budapest,
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:       company_name=OnBased Group,
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:       email=albert@papps.net,
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:       name=Papp Albert,
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:       phone=0036305591118,
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:       postal_code=1066,
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:       vat_id=13355166242,
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:     },
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("mutation UpsertProfile($object: profile_insert_input!) {\n  __typename\n  insert_profile_one(object: $object, on_conflict: {constraint: profile_pkey, update_columns: [name, phone, birth_year, email, vat_id, city, company_name, postal_code, address]}) {\n    __typename\n    ...ProfileExt\n    organisations_created_by_me {\n      __typename\n      ...Organisation\n    }\n  }\n}\n\nfragment Profile on profile {\n  __typename\n  id\n  name\n  birth_year\n  gender\n}\n\nfragment ProfileExt on profile {\n  __typename\n  ...Profile\n  email\n  phone\n  vat_id\n  city\n  address\n  company_name\n  postal_code\n}\n\nfragment Organisation on organisation {\n  __typename\n  id\n  name\n  url\n}\n\nfragment OrganisationExt on organisation {\n  __typename\n  ...Organisation\n  email\n  payment_url\n  created_at\n}"), operationName: UpsertProfile),
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:29.685586: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:29.708467: FINE: gql.links.RetryUntilResponseLink: (UpsertProfile#477872264): Requesting from source
2021-09-23 05:53:29.773599: FINE: gql.links.RetryUntilResponseLink: (UpsertProfile#477872264): Got Done event
2021-09-23 05:53:29.775135: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for UpsertProfile
2021-09-23 05:53:29.781058: INFO: gql.links.MultiMutationLink: (477872264): is done
2021-09-23 05:53:29.792401: FINE: gql.links.LogRequestsLink: Request sent: GGetCompletedTrailsReq {
2021-09-23 05:53:29.792401: FINE: gql.links.LogRequestsLink:   vars=GGetCompletedTrailsVars {
2021-09-23 05:53:29.792401: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:29.792401: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteGetTrailsForListing {\n  trail(order_by: {popularity: desc}) {\n    __typename\n    id\n    ...TrailCardFields\n  }\n}\n\nsubscription GetCompletedTrails {\n  activity(where: {_and: [{start_at: {_is_null: false}}, {_or: [{end_at: {_is_null: false}}, {giveup_at: {_is_null: false}}]}]}) {\n    __typename\n    giveup_at\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n        id\n      }\n    }\n  }\n}\n\nsubscription GetCompletedTrail($activityId: uuid!) {\n  activity_by_pk(id: $activityId) {\n    __typename\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n      }\n    }\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment ActivityTimes on activity {\n  __typename\n  id\n  start_at\n  end_at\n  planned_at\n}"), operationName: GetCompletedTrails),
2021-09-23 05:53:29.792401: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:29.792401: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:29.798432: FINE: gql.links.RetryUntilResponseLink: (GetCompletedTrails#2094506328): Requesting from source
2021-09-23 05:53:29.804953: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for GetCompletedTrails
2021-09-23 05:53:29.928682: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for GetCompletedTrails
2021-09-23 05:53:46.367872: FINE: gql.links.LogRequestsLink: Request sent: GAthleteGetEntriesReq {
2021-09-23 05:53:46.367872: FINE: gql.links.LogRequestsLink:   vars=GAthleteGetEntriesVars {
2021-09-23 05:53:46.367872: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:46.367872: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteGetEntries {\n  activity(order_by: {planned_at: asc, trail_config: {trail: {name: asc}}}, where: {_and: {end_at: {_is_null: true}, giveup_at: {_is_null: true}, deleted_at: {_is_null: true}}}) {\n    __typename\n    ...ActivityCardFields\n    ...OFFLTrackedActivity\n  }\n}\n\nfragment OFFLTrackedActivity on activity {\n  __typename\n  ...ActivityStateFields\n  id\n  path\n  trail_config {\n    __typename\n    id\n    trail {\n      __typename\n      id\n      circular_checkpoints\n      trail_path\n      summary_path\n      checkpoints(order_by: {index: asc}) {\n        __typename\n        id\n        index\n        location\n        range_meters\n      }\n    }\n  }\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment OFFLTrackedActivityWrite on activity {\n  __typename\n  id\n  end_at\n  path\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment ActivityStateFields on activity {\n  __typename\n  deleted_at\n  planned_at\n  approved_at\n  start_at\n  end_at\n  giveup_at\n  trail_config {\n    __typename\n    reward_type {\n      __typename\n      auto_approve\n    }\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}"), operationName: AthleteGetEntries),
2021-09-23 05:53:46.367872: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:46.367872: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:46.371745: FINE: gql.links.RetryUntilResponseLink: (AthleteGetEntries#1502575405): Requesting from source
2021-09-23 05:53:46.373953: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetEntries
2021-09-23 05:53:47.254397: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGetEntries
2021-09-23 05:53:48.817228: FINE: gql.links.LogRequestsLink: Request sent: GAthleteGetTrailsForListingReq {
2021-09-23 05:53:48.817228: FINE: gql.links.LogRequestsLink:   vars=GAthleteGetTrailsForListingVars {
2021-09-23 05:53:48.817228: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:53:48.817228: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteGetTrailsForListing {\n  trail(order_by: {popularity: desc}) {\n    __typename\n    id\n    ...TrailCardFields\n  }\n}\n\nsubscription GetCompletedTrails {\n  activity(where: {_and: [{start_at: {_is_null: false}}, {_or: [{end_at: {_is_null: false}}, {giveup_at: {_is_null: false}}]}]}) {\n    __typename\n    giveup_at\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n        id\n      }\n    }\n  }\n}\n\nsubscription GetCompletedTrail($activityId: uuid!) {\n  activity_by_pk(id: $activityId) {\n    __typename\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n      }\n    }\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment ActivityTimes on activity {\n  __typename\n  id\n  start_at\n  end_at\n  planned_at\n}"), operationName: AthleteGetTrailsForListing),
2021-09-23 05:53:48.817228: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:53:48.817228: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:53:48.821345: FINE: gql.links.RetryUntilResponseLink: (AthleteGetTrailsForListing#1862291400): Requesting from source
2021-09-23 05:53:48.831191: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailsForListing
2021-09-23 05:53:49.243960: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGetTrailsForListing
2021-09-23 05:54:19.002327: FINE: gql.links.LogRequestsLink: Request sent: GAthleteQueryTrailDetailsReq {
2021-09-23 05:54:19.002327: FINE: gql.links.LogRequestsLink:   vars=GAthleteQueryTrailDetailsVars {
2021-09-23 05:54:19.002327: FINE: gql.links.LogRequestsLink:     id=e9da6932-95a7-4f4b-8a33-8e8256f167d7,
2021-09-23 05:54:19.002327: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:54:19.002327: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteQueryTrailDetails($id: uuid!) {\n  trail_by_pk(id: $id) {\n    __typename\n    id\n    ...TrailCardFields\n    ...IntroStepsFields\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}"), operationName: AthleteQueryTrailDetails),
2021-09-23 05:54:19.002327: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:54:19.002327: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:54:19.005518: FINE: gql.links.RetryUntilResponseLink: (AthleteQueryTrailDetails#1629610109): Requesting from source
2021-09-23 05:54:19.009156: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteQueryTrailDetails
2021-09-23 05:54:19.110773: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteQueryTrailDetails
2021-09-23 05:54:31.905730: FINE: gql.links.LogRequestsLink: Request sent: GAthleteQueryTrailDetailsReq {
2021-09-23 05:54:31.905730: FINE: gql.links.LogRequestsLink:   vars=GAthleteQueryTrailDetailsVars {
2021-09-23 05:54:31.905730: FINE: gql.links.LogRequestsLink:     id=6450d8be-d7e6-4569-bf29-f7ec19ecb77a,
2021-09-23 05:54:31.905730: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:54:31.905730: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteQueryTrailDetails($id: uuid!) {\n  trail_by_pk(id: $id) {\n    __typename\n    id\n    ...TrailCardFields\n    ...IntroStepsFields\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}"), operationName: AthleteQueryTrailDetails),
2021-09-23 05:54:31.905730: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:54:31.905730: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:54:31.911296: FINE: gql.links.RetryUntilResponseLink: (AthleteQueryTrailDetails#586391342): Requesting from source
2021-09-23 05:54:32.285138: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteQueryTrailDetails
2021-09-23 05:54:32.290286: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailsForListing
2021-09-23 05:54:37.228055: FINE: gql.links.LogRequestsLink: Request sent: GAthleteQueryTrailDetailsReq {
2021-09-23 05:54:37.228055: FINE: gql.links.LogRequestsLink:   vars=GAthleteQueryTrailDetailsVars {
2021-09-23 05:54:37.228055: FINE: gql.links.LogRequestsLink:     id=5617684a-6e28-4f66-8da5-d6be83bc2b70,
2021-09-23 05:54:37.228055: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:54:37.228055: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteQueryTrailDetails($id: uuid!) {\n  trail_by_pk(id: $id) {\n    __typename\n    id\n    ...TrailCardFields\n    ...IntroStepsFields\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}"), operationName: AthleteQueryTrailDetails),
2021-09-23 05:54:37.228055: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:54:37.228055: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:54:37.233816: FINE: gql.links.RetryUntilResponseLink: (AthleteQueryTrailDetails#444949775): Requesting from source
2021-09-23 05:54:38.316461: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteQueryTrailDetails
2021-09-23 05:54:38.324579: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailsForListing
2021-09-23 05:54:44.972413: FINE: gql.links.LogRequestsLink: Request sent: GAthleteQueryTrailDetailsReq {
2021-09-23 05:54:44.972413: FINE: gql.links.LogRequestsLink:   vars=GAthleteQueryTrailDetailsVars {
2021-09-23 05:54:44.972413: FINE: gql.links.LogRequestsLink:     id=e9da6932-95a7-4f4b-8a33-8e8256f167d7,
2021-09-23 05:54:44.972413: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:54:44.972413: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteQueryTrailDetails($id: uuid!) {\n  trail_by_pk(id: $id) {\n    __typename\n    id\n    ...TrailCardFields\n    ...IntroStepsFields\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}"), operationName: AthleteQueryTrailDetails),
2021-09-23 05:54:44.972413: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:54:44.972413: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:54:44.975724: FINE: gql.links.RetryUntilResponseLink: (AthleteQueryTrailDetails#1629610109): Requesting from source
2021-09-23 05:54:44.978940: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteQueryTrailDetails
2021-09-23 05:54:45.386346: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteQueryTrailDetails
2021-09-23 05:55:17.222084: FINE: gql.links.LogRequestsLink: Request sent: GAthleteGetTrailForNewEntryReq {
2021-09-23 05:55:17.222084: FINE: gql.links.LogRequestsLink:   vars=GAthleteGetTrailForNewEntryVars {
2021-09-23 05:55:17.222084: FINE: gql.links.LogRequestsLink:     id=e9da6932-95a7-4f4b-8a33-8e8256f167d7,
2021-09-23 05:55:17.222084: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:55:17.222084: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("query AthleteGetTrailForNewEntry($id: uuid!) {\n  __typename\n  trail_by_pk(id: $id) {\n    __typename\n    ...IntroStepsFields\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}"), operationName: AthleteGetTrailForNewEntry),
2021-09-23 05:55:17.222084: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:55:17.222084: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:55:17.223382: FINE: gql.links.RetryUntilResponseLink: (AthleteGetTrailForNewEntry#780527952): Requesting from source
2021-09-23 05:55:17.224746: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailForNewEntry
2021-09-23 05:55:17.303234: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGetTrailForNewEntry
2021-09-23 05:55:17.312474: FINE: gql.links.RetryUntilResponseLink: (AthleteGetTrailForNewEntry#780527952): Got Done event
2021-09-23 05:55:29.776401: FINE: gql.links.LogRequestsLink: Request sent: GAthleteCreateActivityReq {
2021-09-23 05:55:29.776401: FINE: gql.links.LogRequestsLink:   vars=GAthleteCreateActivityVars {
2021-09-23 05:55:29.776401: FINE: gql.links.LogRequestsLink:     id=2281d167-9469-4000-8e09-385044ebc326,
2021-09-23 05:55:29.776401: FINE: gql.links.LogRequestsLink:     configId=d48423d1-ef9f-4219-a6df-5011cfddde76,
2021-09-23 05:55:29.776401: FINE: gql.links.LogRequestsLink:     plannedAt=2021-09-23 00:00:00.000,
2021-09-23 05:55:29.776401: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:55:29.776401: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("mutation AthleteCreateActivity($id: uuid!, $configId: uuid!, $plannedAt: timestamptz!) {\n  __typename\n  insert_activity_one(object: {id: $id, trail_config_id: $configId, planned_at: $plannedAt}) {\n    __typename\n    id\n  }\n}\n\nmutation AthleteStartActivity($id: uuid!, $startAt: timestamptz!) {\n  __typename\n  update_activity_by_pk(pk_columns: {id: $id}, _set: {start_at: $startAt}) {\n    __typename\n    id\n    start_at\n  }\n}\n\nmutation AthleteGiveUpActivity($id: uuid!, $giveupAt: timestamptz!) {\n  __typename\n  update_activity_by_pk(pk_columns: {id: $id}, _set: {giveup_at: $giveupAt}) {\n    __typename\n    id\n    giveup_at\n  }\n}"), operationName: AthleteCreateActivity),
2021-09-23 05:55:29.776401: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:55:29.776401: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:55:29.785455: FINE: gql.links.RetryUntilResponseLink: (AthleteCreateActivity#293211267): Requesting from source
2021-09-23 05:55:29.865244: FINE: gql.links.RetryUntilResponseLink: (AthleteCreateActivity#293211267): Got Done event
2021-09-23 05:55:29.867494: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteCreateActivity
2021-09-23 05:55:29.907355: FINE: gql.links.LogRequestsLink: Request sent: GAthleteGetEntriesReq {
2021-09-23 05:55:29.907355: FINE: gql.links.LogRequestsLink:   vars=GAthleteGetEntriesVars {
2021-09-23 05:55:29.907355: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:55:29.907355: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteGetEntries {\n  activity(order_by: {planned_at: asc, trail_config: {trail: {name: asc}}}, where: {_and: {end_at: {_is_null: true}, giveup_at: {_is_null: true}, deleted_at: {_is_null: true}}}) {\n    __typename\n    ...ActivityCardFields\n    ...OFFLTrackedActivity\n  }\n}\n\nfragment OFFLTrackedActivity on activity {\n  __typename\n  ...ActivityStateFields\n  id\n  path\n  trail_config {\n    __typename\n    id\n    trail {\n      __typename\n      id\n      circular_checkpoints\n      trail_path\n      summary_path\n      checkpoints(order_by: {index: asc}) {\n        __typename\n        id\n        index\n        location\n        range_meters\n      }\n    }\n  }\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment OFFLTrackedActivityWrite on activity {\n  __typename\n  id\n  end_at\n  path\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment ActivityStateFields on activity {\n  __typename\n  deleted_at\n  planned_at\n  approved_at\n  start_at\n  end_at\n  giveup_at\n  trail_config {\n    __typename\n    reward_type {\n      __typename\n      auto_approve\n    }\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}"), operationName: AthleteGetEntries),
2021-09-23 05:55:29.907355: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:55:29.907355: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:55:29.909246: INFO: gql.links.MultiMutationLink: (293211267): is done
2021-09-23 05:55:29.911204: FINE: gql.links.RetryUntilResponseLink: (AthleteGetEntries#1502575405): Requesting from source
2021-09-23 05:55:29.912135: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetEntries
2021-09-23 05:55:30.125454: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGetEntries
2021-09-23 05:55:30.139109: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailsForListing
2021-09-23 05:55:30.139525: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteQueryTrailDetails
2021-09-23 05:55:30.139781: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailForNewEntry
2021-09-23 05:55:34.360784: FINE: gql.links.LogRequestsLink: Request sent: GAthleteWatchActivityDetailsReq {
2021-09-23 05:55:34.360784: FINE: gql.links.LogRequestsLink:   vars=GAthleteWatchActivityDetailsVars {
2021-09-23 05:55:34.360784: FINE: gql.links.LogRequestsLink:     activityId=2281d167-9469-4000-8e09-385044ebc326,
2021-09-23 05:55:34.360784: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:55:34.360784: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteWatchActivityDetails($activityId: uuid!) {\n  activity_by_pk(id: $activityId) {\n    __typename\n    ...ActivityCardFields\n    ...OFFLTrackedActivity\n  }\n}\n\nfragment OFFLTrackedActivity on activity {\n  __typename\n  ...ActivityStateFields\n  id\n  path\n  trail_config {\n    __typename\n    id\n    trail {\n      __typename\n      id\n      circular_checkpoints\n      trail_path\n      summary_path\n      checkpoints(order_by: {index: asc}) {\n        __typename\n        id\n        index\n        location\n        range_meters\n      }\n    }\n  }\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment OFFLTrackedActivityWrite on activity {\n  __typename\n  id\n  end_at\n  path\n  activity__pathpoints(distinct_on: checkpoint_id, where: {checkpoint_id: {_is_null: false}}, order_by: [{checkpoint_id: asc}, {reached_at: asc}]) {\n    __typename\n    reached_at\n    checkpoint {\n      __typename\n      id\n      index\n      location\n    }\n  }\n}\n\nfragment ActivityStateFields on activity {\n  __typename\n  deleted_at\n  planned_at\n  approved_at\n  start_at\n  end_at\n  giveup_at\n  trail_config {\n    __typename\n    reward_type {\n      __typename\n      auto_approve\n    }\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment ActivityPath on activity_path {\n  __typename\n  id\n  checkpoint_id\n  reached_at\n  location\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment Checkpoint on checkpoint {\n  __typename\n  id\n  name\n  index\n  location\n}\n\nfragment CheckpointExt on checkpoint {\n  __typename\n  ...Checkpoint\n  description\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}"), operationName: AthleteWatchActivityDetails),
2021-09-23 05:55:34.360784: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:55:34.360784: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:55:34.370493: FINE: gql.links.RetryUntilResponseLink: (AthleteWatchActivityDetails#481964424): Requesting from source
2021-09-23 05:55:35.549658: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteWatchActivityDetails
2021-09-23 05:55:35.568489: FINE: services.LocationService: Start tracking...
2021-09-23 05:55:35.573842: INFO: services.LocationService: Tracking started with title: , message: , body: 
2021-09-23 05:55:35.594081: FINE: services.LocationService: Got position: Latitude: 47.56585789866153, Longitude: 18.395460013650258
2021-09-23 05:55:35.594459: FINE: services.LocationService: Got position: Latitude: 47.56425935053598, Longitude: 18.396505183484372
2021-09-23 05:55:35.601667: FINE: services.LocationService: Got position: Latitude: 47.56425935053598, Longitude: 18.396505183484372
2021-09-23 05:55:35.799643: FINE: services.LocationService: Got position: Latitude: 47.564202126704004, Longitude: 18.39648752277677
2021-09-23 05:55:36.058966: FINE: services.LocationService: Got position: Latitude: 47.56425628747563, Longitude: 18.39640444491917
2021-09-23 05:55:37.050587: FINE: services.LocationService: Got position: Latitude: 47.564269129821014, Longitude: 18.39644733982963
2021-09-23 05:55:43.177044: FINE: services.LocationService: Got position: Latitude: 47.56433317863318, Longitude: 18.396564240381636
2021-09-23 05:55:47.744618: FINE: services.LocationService: Got position: Latitude: 47.564270427654776, Longitude: 18.39632044523935
2021-09-23 05:55:48.732568: FINE: services.LocationService: Got position: Latitude: 47.564273285229675, Longitude: 18.396348113516353
2021-09-23 05:55:49.729136: FINE: services.LocationService: Got position: Latitude: 47.564225759389075, Longitude: 18.39652137376739
2021-09-23 05:55:50.682560: FINE: services.LocationService: Got position: Latitude: 47.564217236216365, Longitude: 18.396558861695404
2021-09-23 05:55:51.629022: FINE: services.LocationService: Got position: Latitude: 47.56423326973311, Longitude: 18.39656115939957
2021-09-23 05:55:52.585084: FINE: services.LocationService: Got position: Latitude: 47.564245301061376, Longitude: 18.396568594868107
2021-09-23 05:55:52.594171: FINE: services.LocationService: Stopping location tracking...
2021-09-23 05:55:52.595348: FINE: gql.links.LogRequestsLink: Request sent: GAthleteGetTrailsForListingReq {
2021-09-23 05:55:52.595348: FINE: gql.links.LogRequestsLink:   vars=GAthleteGetTrailsForListingVars {
2021-09-23 05:55:52.595348: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:55:52.595348: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteGetTrailsForListing {\n  trail(order_by: {popularity: desc}) {\n    __typename\n    id\n    ...TrailCardFields\n  }\n}\n\nsubscription GetCompletedTrails {\n  activity(where: {_and: [{start_at: {_is_null: false}}, {_or: [{end_at: {_is_null: false}}, {giveup_at: {_is_null: false}}]}]}) {\n    __typename\n    giveup_at\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n        id\n      }\n    }\n  }\n}\n\nsubscription GetCompletedTrail($activityId: uuid!) {\n  activity_by_pk(id: $activityId) {\n    __typename\n    ...ActivityTimes\n    trail_config {\n      __typename\n      trail {\n        __typename\n        ...TrailCardFields\n      }\n    }\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}\n\nfragment ActivityTimes on activity {\n  __typename\n  id\n  start_at\n  end_at\n  planned_at\n}"), operationName: AthleteGetTrailsForListing),
2021-09-23 05:55:52.595348: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:55:52.595348: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:55:52.604563: FINE: gql.links.RetryUntilResponseLink: (AthleteGetTrailsForListing#1862291400): Requesting from source
2021-09-23 05:55:52.702914: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailsForListing
2021-09-23 05:55:52.703780: INFO: services.LocationService: Location tracking stopped
2021-09-23 05:55:53.657617: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteGetTrailsForListing
2021-09-23 05:55:57.870370: FINE: gql.links.LogRequestsLink: Request sent: GAthleteQueryTrailDetailsReq {
2021-09-23 05:55:57.870370: FINE: gql.links.LogRequestsLink:   vars=GAthleteQueryTrailDetailsVars {
2021-09-23 05:55:57.870370: FINE: gql.links.LogRequestsLink:     id=76ae2610-1986-4ae9-9311-f2734ab40bb6,
2021-09-23 05:55:57.870370: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:55:57.870370: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteQueryTrailDetails($id: uuid!) {\n  trail_by_pk(id: $id) {\n    __typename\n    id\n    ...TrailCardFields\n    ...IntroStepsFields\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}"), operationName: AthleteQueryTrailDetails),
2021-09-23 05:55:57.870370: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:55:57.870370: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:55:57.873230: FINE: gql.links.RetryUntilResponseLink: (AthleteQueryTrailDetails#2109892214): Requesting from source
2021-09-23 05:55:58.059660: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteQueryTrailDetails
2021-09-23 05:55:58.074968: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailsForListing
2021-09-23 05:56:11.944380: FINE: gql.links.LogRequestsLink: Request sent: GAthleteQueryTrailDetailsReq {
2021-09-23 05:56:11.944380: FINE: gql.links.LogRequestsLink:   vars=GAthleteQueryTrailDetailsVars {
2021-09-23 05:56:11.944380: FINE: gql.links.LogRequestsLink:     id=a54acedd-c9a8-40e9-a3fa-3379bb710d1b,
2021-09-23 05:56:11.944380: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:56:11.944380: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteQueryTrailDetails($id: uuid!) {\n  trail_by_pk(id: $id) {\n    __typename\n    id\n    ...TrailCardFields\n    ...IntroStepsFields\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}"), operationName: AthleteQueryTrailDetails),
2021-09-23 05:56:11.944380: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:56:11.944380: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:56:11.950148: FINE: gql.links.RetryUntilResponseLink: (AthleteQueryTrailDetails#1867001437): Requesting from source
2021-09-23 05:56:12.400856: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteQueryTrailDetails
2021-09-23 05:56:12.417131: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteGetTrailsForListing
2021-09-23 05:56:27.749797: FINE: gql.links.LogRequestsLink: Request sent: GAthleteQueryTrailDetailsReq {
2021-09-23 05:56:27.749797: FINE: gql.links.LogRequestsLink:   vars=GAthleteQueryTrailDetailsVars {
2021-09-23 05:56:27.749797: FINE: gql.links.LogRequestsLink:     id=e9da6932-95a7-4f4b-8a33-8e8256f167d7,
2021-09-23 05:56:27.749797: FINE: gql.links.LogRequestsLink:   },
2021-09-23 05:56:27.749797: FINE: gql.links.LogRequestsLink:   operation=Operation(document: DocumentNode("subscription AthleteQueryTrailDetails($id: uuid!) {\n  trail_by_pk(id: $id) {\n    __typename\n    id\n    ...TrailCardFields\n    ...IntroStepsFields\n  }\n}\n\nfragment IntroStepsFields on trail {\n  __typename\n  id\n  trail_configs {\n    __typename\n    ...TrailConfig\n  }\n  organisation {\n    __typename\n    url\n    payment_url\n  }\n}\n\nfragment TrailConfig on trail_config {\n  __typename\n  id\n  trail_id\n  activity_type {\n    __typename\n    ...ActivityType\n  }\n  reward_type {\n    __typename\n    ...RewardType\n  }\n}\n\nfragment ActivityType on activity_type {\n  __typename\n  id\n  name_en\n  name_hu\n  material_icon_name\n  weight\n}\n\nfragment RewardType on reward_type {\n  __typename\n  id\n  name_en\n  name_hu\n  auto_approve\n  material_icon_name\n  weight\n}\n\nfragment TrailCardFields on trail {\n  __typename\n  name\n  summary\n  description\n  summary_path\n  elevation_meters\n  length_meters\n  minimum_height_meters\n  maximum_height_meters\n  popularity\n  circular_checkpoints\n  checkpoints(order_by: {index: asc}) {\n    __typename\n    location\n    range_meters\n  }\n}\n\nfragment ActivityCardFields on activity {\n  __typename\n  id\n  planned_at\n  trail_config {\n    __typename\n    trail {\n      __typename\n      ...TrailCardFields\n    }\n  }\n}"), operationName: AthleteQueryTrailDetails),
2021-09-23 05:56:27.749797: FINE: gql.links.LogRequestsLink:   executeOnListen=true,
2021-09-23 05:56:27.749797: FINE: gql.links.LogRequestsLink: }
2021-09-23 05:56:27.755471: FINE: gql.links.RetryUntilResponseLink: (AthleteQueryTrailDetails#1629610109): Requesting from source
2021-09-23 05:56:27.761449: FINE: gql.links.LogRequestsLink: Got DataSource.Cache response for AthleteQueryTrailDetails
2021-09-23 05:56:28.591924: FINE: gql.links.LogRequestsLink: Got DataSource.Link response for AthleteQueryTrailDetails
